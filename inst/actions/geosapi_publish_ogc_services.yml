id: geosapi-publish-ogc-services
fun: geosapi_publish_ogc_services.R
funders:
  - name: UN-FAO 
    url: https://www.fao.org
  - name: IRD
    url: https:/www.ird.fr
  - name: INRAE
    url: https://www.inrae.fr
authors:
  - name: Emmanuel Blondel
    email: emmanuel.blondel1@gmail.com
maintainer:
  name: Emmanuel Blondel
  email: emmanuel.blondel1@gmail.com
types:
  - Data upload
  - Data publication
  - Metadata publication
def: Publish data to GeoServer OGC web-services (WMS/WFS/WCS)
status: stable
target: NA
target_dir: NA
packages:
  - geosapi
available_options:
  createWorkspace:
    def: Create workspace if not already existing
    class: logical
    default: false
  createStore:
    def: Create data/coverage store if not already existing
    class: logical
    default: false
  store_description:
    def: Specify a description for the new data/coverage store
    class: character
    default: ""
  map_thumbnail_template:
    def: "Specify a Mustache/whisker template for a WMS GetMap request to be propagated in metadata (eg. ISO 19115) when the action is used. Only active when enrich_with_relations'/'enrich_with_relation_wms_thumbnail' are TRUE"
    class: character
    default: "{geoserver_url}/{workspace}/ows?service=WMS&version=1.1.0&request=GetMap&layers={layer}&bbox={bbox}&width=600&height=300&srs=EPSG:{srid}&format=image/png"
  enrich_with_relations:
    def: When enabled, enrichs entity with OGC relations
    class: logical
    default: true
  enrich_with_relation_wms:
    def: When enabled, enrichs entity with a base WMS link relation
    class: logical
    default: true
  enrich_with_relation_wms_thumbnail:
    def: When enabled, enrichs entity with a WMS-based thumbnail relation
    class: logical
    default: true
  describe_wms_relation_with_category:
    def: When enabled, the WMS main relation description will be appended with the mention 'Map access'
    class: logical
    default: true
  describe_wms_relation_with_ogc_service_description:
    def: When enabled, the WMS main relation description will be appended with the mention 'OGC Web Map Service (WMS)'
    class: logical
    default: true
  enrich_with_relation_wfs:
    def: When enabled, enrichs entity with a base WFS link relation (applies to 'vector' only)
    class: logical
    default: true
  enrich_with_relation_wfs_download_links:
    def: When enabled, enrichs entity with WFS format-specific (GML, GeoJSON, SHAPE-ZIP, CSV) links for download purpose (applies to 'vector' only).
    class: logical
    default: false
  describe_wfs_relation_with_category:
    def: When enabled, the WFS relations description will be appended with the mention 'Data (features) access' for the base WFS link or 'Data download' in case of download links
    class: logical
    default: true
  describe_wfs_relation_with_ogc_service_description:
    def: When enabled, the WFS relations description will be appended with the mention 'OGC Web Feature Service (WFS)'
    class: logical
    default: true
  describe_wfs_relation_with_format:
    def: When enabled, the WFS download relations description will be appended with the mention of the download format
    class: logical
    default: true
  enrich_with_relation_wcs:
    def: When enabled, enrichs entity with a base WCS link relation (applies to 'grid' only)
    class: logical
    default: true
  enrich_with_relation_wcs_download_links:
    def: When enabled, enrichs entity with WCS format-specific links for download purpose (applies to 'grid' only). Only GeoTIFF at now.
    class: logical
    default: true
  describe_wcs_relation_with_category:
    def: When enabled, the WCS relations description will be appended with the mention 'Data (coverage) access' for the base WCS link or 'Data download' in case of download links
    class: logical
    default: true
  describe_wcs_relation_with_ogc_service_description:
    def: When enabled, the WCS relations description will be appended with the mention 'OGC Web Coverage Service (WCS)'
    class: logical
    default: true
  describe_wcs_relation_with_format:
    def: When enabled, the WCS download relations description will be appended with the mention of the download format
    class: logical
    default: true
  overwrite_upload:
    def: When set to TRUE (default), in case a layer already exists, data upload will be re-done (if upload is set to true in entity Data)
    class: logical
    default: true
  overwrite_layer:
    def: When set to TRUE (default), in case a layer already exists, layer will be republished.
    class: logical
    default: true
  overwrite:
    def: When set to TRUE (default), in case a layer already exists, data upload will be re-done (if upload is set to true in entity Data), and layer will be re-published. This option preveals over options 'overwrite_upload' and 'overwrite_layer'
    class: logical
    default: true
